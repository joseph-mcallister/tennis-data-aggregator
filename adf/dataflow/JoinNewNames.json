{
	"name": "JoinNewNames",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LatestUTRData",
						"type": "DatasetReference"
					},
					"name": "utrdata"
				},
				{
					"dataset": {
						"referenceName": "TennisDataCSV",
						"type": "DatasetReference"
					},
					"name": "csvdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TennisDataCSV",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "NewNames"
				},
				{
					"name": "ExistingNames"
				},
				{
					"name": "JoinOldDataWithUpdatd"
				},
				{
					"name": "SelectRelevantColumns"
				},
				{
					"name": "UpdateDates2"
				},
				{
					"name": "UpdateDates"
				},
				{
					"name": "SelectRelevantColumns2"
				},
				{
					"name": "UnionExistingWithNew"
				},
				{
					"name": "OrderColumnsByDate"
				},
				{
					"name": "AddSortableDates"
				},
				{
					"name": "SortByDate"
				}
			],
			"script": "source(output(\n\t\tlocation as string,\n\t\tsingles_utr as string,\n\t\tdoubles_utr as string,\n\t\tgrad as string,\n\t\tage as string,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\tname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> utrdata\nsource(output(\n\t\tname as string,\n\t\tinitial_singles_utr as string,\n\t\tlatest_singles_utr as string,\n\t\tinitial_doubles_utr as string,\n\t\tgrad_year as string,\n\t\tlocation as string,\n\t\tdate_first_added as string,\n\t\tlast_updated as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> csvdata\nutrdata, csvdata exists(utrdata@name == csvdata@name,\n\tnegate:true,\n\tbroadcast: 'auto')~> NewNames\nutrdata, csvdata exists(utrdata@name == csvdata@name,\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistingNames\nExistingNames, csvdata join(utrdata@name == csvdata@name,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinOldDataWithUpdatd\nJoinOldDataWithUpdatd select(mapColumn(\n\t\tname = csvdata@name,\n\t\tsingles_utr,\n\t\tlocation = csvdata@location,\n\t\tinitial_singles_utr,\n\t\tinitial_doubles_utr,\n\t\tgrad_year,\n\t\tcurrent_singles_utr = singles_utr,\n\t\tdate_first_added,\n\t\tlast_updated\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelevantColumns\nSelectRelevantColumns derive(last_updated = iif(isNull(singles_utr), last_updated, :today_date),\n\t\tsingles_utr = iif(isNull(singles_utr), initial_singles_utr, singles_utr),\n\t\ttoday_date := toString(currentDate('America/New_York'), 'MM/dd/yyyy')) ~> UpdateDates2\nNewNames derive(grad_year = grad,\n\t\tdate_first_added = :today_date,\n\t\tlast_updated = :today_date,\n\t\tinitial_singles_utr = singles_utr,\n\t\ttoday_date := toString(currentDate('America/New_York'), 'MM/dd/yyyy')) ~> UpdateDates\nUpdateDates select(mapColumn(\n\t\tname,\n\t\tlocation,\n\t\tinitial_singles_utr,\n\t\tsingles_utr,\n\t\tinitial_doubles_utr = doubles_utr,\n\t\tgrad_year,\n\t\tdate_first_added,\n\t\tlast_updated\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelevantColumns2\nUpdateDates2, SelectRelevantColumns2 union(byName: true)~> UnionExistingWithNew\nSortByDate select(mapColumn(\n\t\tname,\n\t\tinitial_singles_utr,\n\t\tlatest_singles_utr = singles_utr,\n\t\tinitial_doubles_utr,\n\t\tgrad_year,\n\t\tlocation,\n\t\tdate_first_added,\n\t\tlast_updated\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OrderColumnsByDate\nUnionExistingWithNew derive(sortable_date_updated = year(:last_updated_date) * 365 + month(:last_updated_date) * 30 + dayOfMonth(:last_updated_date),\n\t\tsortable_date_added = year(:date_first_added) * 365 + month(:date_first_added) * 30 + dayOfMonth(:date_first_added),\n\t\tlast_updated_date := toDate(last_updated, 'MM/dd/yyyy'),\n\t\tdate_first_added := toDate(date_first_added, 'MM/dd/yyyy')) ~> AddSortableDates\nAddSortableDates sort(desc(sortable_date_added, true)) ~> SortByDate\nOrderColumnsByDate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tname as string,\n\t\tinitial_singles_utr as string,\n\t\tlatest_singles_utr as string,\n\t\tinitial_doubles_utr as string,\n\t\tgrad_year as string,\n\t\tlocation as string,\n\t\tdate_first_added as string,\n\t\tlast_updated as string\n\t),\n\tpartitionFileNames:['players.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}